@page "/states/create/{CountryId:int}"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService
@attribute [Authorize(Roles = "Admin")]

<h3>Crear Estado/Departamento</h3>

<StateForm @ref="stateForm" State="state" OnValidSubmit="CreateAsync" RetunrAction="Return" />


@code {
    private State state = new();
    private StateForm? stateForm;

    [Parameter]
    public int CountryId { get; set; }
    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; } = default!;


    private async Task CreateAsync()
    {

        state.CountryId = CountryId;
        var responseHttp = await repository.Post("/api/states", state);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }


        await BlazoredModal.CloseAsync(ModalResult.Ok());
        Return();
    }



    private void Return()
    {
        stateForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo($"/countries/details/{CountryId}");
    }
}
